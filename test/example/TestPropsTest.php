<?php

namespace Ailixter\Gears\Example;

/**
 * Generated by PHPUnit_SkeletonGenerator.
 */
class TestPropsTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var TestProps
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp () {
        $this->object = new TestProps;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown () {

    }

    /**
     * @ covers Ailixter\Gears\Example\TestProps::__get
     */
    public function test__get () {
        self::assertEquals('my public', $this->object->myPub);
    }

    /**
     * @ covers Ailixter\Gears\Example\TestProps::propertyGet
     * @expectedException \RuntimeException
     */
    public function test__get_private () {
        return($this->object->myPri);
    }

    /**
     * @ covers Ailixter\Gears\Example\TestProps::propertyGet
     * @expectedException \RuntimeException
     */
    public function test__get_unknown () {
        return($this->object->unknown);
    }

    /**
     * @covers Ailixter\Gears\Example\TestProps::__set
     */
    public function test__set () {
        $this->object->myPub = 123;
        self::assertEquals(123, $this->object->myPub);
    }

    /**
     * @ covers Ailixter\Gears\Example\TestProps::propertyGet
     * @expectedException \RuntimeException
     */
    public function test__set_private () {
        $this->object->myPri = 123;
    }

    /**
     * @ covers Ailixter\Gears\Example\TestProps::propertyGet
     * @expectedException \RuntimeException
     */
    public function test__set_unknown () {
        $this->object->unknown = 123;
    }

    /**
     */
    public function test__isset () {
        self::assertTrue(isset($this->object->myPub));
    }

    /**
     * @expectedException \RuntimeException
     * SIC! unset removes the defined property
     */
    public function test__unset () {
        unset($this->object->myPub);
        self::assertFalse(isset($this->object->myPub));
    }

    /**
     */
    public function test__isset_pri () {
        self::assertTrue(isset($this->object->myPri));
    }

    /**
     */
    public function test__unset_pri () {
        unset($this->object->myPri);
        self::assertFalse(isset($this->object->myPri));
    }

}
